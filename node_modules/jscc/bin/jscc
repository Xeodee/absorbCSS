#!/usr/bin/env coffee
fs = require('fs');
{compressor} = require '../lib/compressor'
{argv} = process

class Option
        @SHORT_OPTION_LIST =
                '-t' : 'specify build target.',
                '-m' : 'specify build mode.'
                
        @LONG_OPTION_LIST =
                '--target' : '-t',
                '--mode' : '-m',
                '--deps' : '-d'

        @COMMAND_LIST =
                'build' : 'build javascript files.',
                'watch' : 'watch and build javascript',
                'deps' : 'resolve dependencies.'
        
        constructor : (@_commandSet)->
                @_argv = argv
                @_optionSet = {}

        analyseAndRun : ->
                argv = Array.prototype.slice.call(@_argv)
                argv = Array.prototype.splice.call(argv, 2)
                if argv.length > 0
                        command
                        for item, index in argv
                                if Option.SHORT_OPTION_LIST[item]
                                        option
                                        value = argv[index + 1]
                                        for k,v of Option.LONG_OPTION_LIST
                                                if v is item
                                                        option = k
                                        if option and @_checkValue value
                                                @_optionSet[option.slice(2)] = value
                                else if Option.LONG_OPTION_LIST[item]
                                        option = Option.LONG_OPTION_LIST[item]
                                        value = argv[index + 1]
                                        if @_checkValue value
                                                @_optionSet[option.slice(2)] = value
                                else if Option.COMMAND_LIST[item]
                                        command = item
                        if command
                                if @_commandSet[command]
                                        @_commandSet[command](@_optionSet)


        _checkValue : (value) ->
                if value
                        index = value.indexOf('-')
                        value and index is -1
                else
                        no


getOption = (option) ->
        if option is 'release' or option is 'debug'
                option
        else
                'release'

commandSet =
        'watch' : (option)->
                option = getOption option.mode
                compressor.run(option)

        'build' : (opt) ->
                {mode, target} = opt
                mode = getOption mode
                compressor.build(mode, target)

        'deps' : (opt) ->
                {target} = opt
                compressor.deps(target)
                


option = new Option(commandSet)
option.analyseAndRun()


                                        
